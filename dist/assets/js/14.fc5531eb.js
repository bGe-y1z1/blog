(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{469:function(e,t,r){"use strict";r.r(t);var s=r(49),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"amd、cmd、commonjs、es6的对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#amd、cmd、commonjs、es6的对比"}},[e._v("#")]),e._v(" AMD、CMD、CommonJs、ES6的对比")]),e._v(" "),r("p",[e._v("他们都是用于在模块化定义中使用的，AMD、CMD、COmmonJS是ES5中提供的模块化编程的方案，import/export是ES6中定义新增的")]),e._v(" "),r("h2",{attrs:{id:"amd-异步模块的定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#amd-异步模块的定义"}},[e._v("#")]),e._v(" AMD-异步模块的定义")]),e._v(" "),r("p",[e._v("AMD是RequireJs对模块定义的规范化产出。RequireJS是对这个概念的实现。")]),e._v(" "),r("p",[e._v("RequireJS：是一个AMD框架，可以异步加载JS文件，按照模块加载方法，通过define()函数定义，第一个参数是一个数组，里面定义一些需要依赖的包，第二个参数是一个回调函数，通过变量来引用模块里面的方法，最后通过return来输出。")]),e._v(" "),r("p",[e._v("RequireJS 是一个依赖前置、异步定义的AMD框架（在参数里面引入js文件），在定义的同时如果需要用到别的模块，在最前面定义好即在参数数组里面进行引入，在回调里面加载")]),e._v(" "),r("h2",{attrs:{id:"cmd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[e._v("#")]),e._v(" CMD")]),e._v(" "),r("p",[e._v("CMD是SeaJS在推广过程中对模块定义的规范化产出，是一个同步模块定义，是SeaJS的一个标准，SeaJS是CMD概念的一个实现，SeaJS是淘宝团队提供的一个模块开发的js框架.")]),e._v(" "),r("p",[e._v("通过define()定义，没有依赖前置，通过require加载jQuery插件，CMD是依赖就近，在什么地方使用到插件就在什么地方require该插件，即用即返，这是一个同步的概念")]),e._v(" "),r("h2",{attrs:{id:"commonjs规范"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#commonjs规范"}},[e._v("#")]),e._v(" CommonJS规范")]),e._v(" "),r("p",[e._v("是通过module.exports定义的，在前端浏览器里面并不支持module.exports,通过node.js后端使用的。Nodejs端是使用CommonJS规范的，前端浏览器一般使用AMD、CMD、ES6等定义模块化开发的")]),e._v(" "),r("h2",{attrs:{id:"es6特性-模块化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6特性-模块化"}},[e._v("#")]),e._v(" ES6特性 模块化")]),e._v(" "),r("p",[e._v("export/import对模块进行导出导入的")])])}),[],!1,null,null,null);t.default=a.exports}}]);