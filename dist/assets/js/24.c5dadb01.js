(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{458:function(a,t,e){"use strict";e.r(t);var r=e(49),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[a._v("#")]),a._v(" webpack")]),a._v(" "),e("p",[a._v("webpack是一个现代javascript应用程序的模块打包器")]),a._v(" "),e("p",[e("img",{attrs:{src:"/webpack/webpack.webp",alt:"nodeJS"}})]),a._v(" "),e("h2",{attrs:{id:"webpack的两大特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack的两大特点"}},[a._v("#")]),a._v(" webpack的两大特点")]),a._v(" "),e("p",[a._v("模块化和打包")]),a._v(" "),e("p",[a._v("以CommonJS来编写，但也支持AMD、CMD模块（对于新项目，推荐直接使用CommonJS）；\n串联式模块加载器以及插件机制，让其具有更好的灵活性和扩展性，例如提供对CoffeeScript、ES6的支持；\n可以根据配置或者智能分析打包成多个文件，实现公共模块或者按需加载；\n支持对CSS，图片等资源进行打包，这样子就不用使用Grunt或Gulp(browserify只能打包JS文件)；\n开发时在内存中完成打包，性能更快，完全可以支持开发过程的实时打包需求；\n对source map有很好的支持。")]),a._v(" "),e("h4",{attrs:{id:"模块化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[a._v("#")]),a._v(" 模块化")]),a._v(" "),e("p",[a._v("webpack会把一切视为模块，模块化的文件非常灵活利于调试和升级，webpack让人感觉有种工程化的感觉")]),a._v(" "),e("h4",{attrs:{id:"打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[a._v("#")]),a._v(" 打包")])])}),[],!1,null,null,null);t.default=s.exports}}]);